package fr.molotovad79.jeu_d_échecs.pièce;

public class Cavalier extends Pièce implements FonctionPièces,Echec_Roi{

	public Cavalier(CouleurPièce coulPièce,Pièce [][] posPièce) {
		super(coulPièce, "CH",posPièce);
	}

	@Override
	public void manger(Pièce p) {
		int xCavalier=cavalier().getX(),yCavalier=cavalier().getY();
		Pièce[][] pos= getPosPièce();
		pos[x][y]=pos[p1().getX()][p1().getY()];
		while(pos[xCavalier+1][yCavalier-2]==pos[x][y] ||pos[xCavalier-1][yCavalier-2]==pos[x][y] 
				||pos[xCavalier-2][yCavalier-1]==pos[x][y]||pos[xCavalier-2][yCavalier+1]==pos[x][y]
				||pos[xCavalier-1][yCavalier+2]==pos[x][y]||pos[xCavalier+1][yCavalier+2]==pos[x][y]
				||pos[xCavalier+2][yCavalier+1]==pos[x][y]||pos[xCavalier+2][yCavalier-1]==pos[x][y]
				&& p1()!=null && p1()!=roi()) {
			cavalier().setInitiale(null);
			pos[xCavalier][yCavalier]=pos[x][y];
			cavalier().setPosPièce(pos);
			p1().setInitiale(null);
			cimetiere().ajouter_cimetière(p1()); 
			cimetiere().setNbPièces(cimetiere().getNbPièces()+1);
			p1().equals(null);
			cavalier().setInitiale("CH");
			
		}
	}
	
	/*
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * */	

	@Override
	public void bouger(int x, int y) {
		int xCavalier=cavalier().getX(),yCavalier=cavalier().getY();
		Pièce[][] pos= getPosPièce();
		pos[x][y]=pos[p1().getX()][p1().getY()];
		while(pos[xCavalier+1][yCavalier-2]==pos[x][y] ||pos[xCavalier-1][yCavalier-2]==pos[x][y] 
				||pos[xCavalier-2][yCavalier-1]==pos[x][y]||pos[xCavalier-2][yCavalier+1]==pos[x][y]
				||pos[xCavalier-1][yCavalier+2]==pos[x][y]||pos[xCavalier+1][yCavalier+2]==pos[x][y]
				||pos[xCavalier+2][yCavalier+1]==pos[x][y]||pos[xCavalier+2][yCavalier-1]==pos[x][y]
				 && pos[x][y]!=p1()&& pos[x][y]!=p2()) {
		
		}
		
	}
	
	/*
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * */	

	@Override
	public boolean mettre_en_échec(Roi r) {
		
	}
	
	/*
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * ******************************************************************************************************************************************************
	 * */	
}
